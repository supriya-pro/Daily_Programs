Grid of Lamps
The program must accept two integers R and C representing the size RxC of a grid of lamps as the input. Initially, all the lamps
turned OFF (0) in the grid. The program also accepts Q queries, where each query contains two integers representing the
position of a lamp to be turned ON (1). For each query, the lamp present in the specified position will be turned ON and all
other lamps present in the same row, column will be toggled (OFF to ON or ON to OFF). Finally, the program must print the
status of RxC grid of lamps after processing Q queries as the output.
Boundary Condition(s):
2 <= R, C <= 50
1 <= Q <= 20
Input Format:
The first line contains R and C separated by a space.
The second line contains Q.
The next Q lines, each contains two integers separated by a space.
Output Format:
The first R lines, each contains C integers representing the status of RxC grid of lamps.
Example Input/Output 1:
Input:
4 5
3
1 2
4 3
1 5
Output:
0 0 1 0 1
0 1 1 0 1
0 1 1 0 1
1 0 1 1 0
Explanation:
Initially, the status of 4x5 grid of lamps is given below.
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
In the first query, (1, 2) represents the position of the lamp to be turned ON.
After processing the first query, the grid becomes
1 1 1 1 1
0 1 0 0 0
0 1 0 0 0
0 1 0 0 0
In the second query, (4, 3) represents the position of the lamp to be turned ON.
After processing the second query, the grid becomes
1 1 0 1 1
0 1 1 0 0
0 1 1 0 0
1 0 1 1 1
In the third query, (1, 5) represents the position of the lamp to be turned ON.
After processing the third query, the grid becomes
0 0 1 0 1
0 1 1 0 1
0 1 1 0 1
1 0 1 1 0
Example Input/Output 2:
Input:
6 6
4
1 3
2 3
4 5
5 5
Output:
1 1 0 1 1 1
1 1 1 1 1 1
0 0 0 0 0 0
1 1 1 1 0 1
1 1 1 1 1 1
0 0 0 0 0 0


p